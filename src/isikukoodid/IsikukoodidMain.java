/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package isikukoodid;

import java.text.SimpleDateFormat;
import java.util.*;

/**
 *
 * @author diana
 */
public class IsikukoodidMain extends javax.swing.JFrame {

    boolean future = false;
    boolean young = false;
    boolean sFuture = false;
    Calendar cal = Calendar.getInstance();
    int minYear = 1800;
    int maxYear = cal.get(Calendar.YEAR);
    int currentYear = Calendar.getInstance().get(Calendar.YEAR);

    /**
     * Creates new form IsikukoodidMain
     */
    public IsikukoodidMain() {
        initComponents();
        dchDate.setLocale(new Locale("et", "ET"));
        dchDate.setMaxSelectableDate(new java.util.Date());
        ychEnd.setYear(currentYear);
        ychEnd.setMaximum(currentYear);
        ychStart.setYear(currentYear - 122);
        ychStart.setMaximum(currentYear - 122);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgCheck = new javax.swing.ButtonGroup();
        pnlGenerate = new javax.swing.JPanel();
        cmbGender = new javax.swing.JComboBox<>();
        btnGenerate = new javax.swing.JButton();
        chkFuture = new javax.swing.JCheckBox();
        lblDate = new javax.swing.JLabel();
        dchDate = new com.toedter.calendar.JDateChooser();
        lblGender = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaResult = new javax.swing.JTextArea();
        pnlCheck = new javax.swing.JPanel();
        txtPersonalcode = new javax.swing.JTextField();
        lblPersonalcode = new javax.swing.JLabel();
        rdoGenderString = new javax.swing.JRadioButton();
        rdoYear2 = new javax.swing.JRadioButton();
        rdoMonthNr = new javax.swing.JRadioButton();
        rdoDay = new javax.swing.JRadioButton();
        rdoHospitalNr = new javax.swing.JRadioButton();
        rdoControl = new javax.swing.JRadioButton();
        rdoAge = new javax.swing.JRadioButton();
        rdoDate = new javax.swing.JRadioButton();
        rdoGenderLetter = new javax.swing.JRadioButton();
        rdoYear4 = new javax.swing.JRadioButton();
        rdoGenderNr = new javax.swing.JRadioButton();
        rdoMonthString = new javax.swing.JRadioButton();
        rdoHospitalString = new javax.swing.JRadioButton();
        pnlSeveralGen = new javax.swing.JPanel();
        spnAmount = new javax.swing.JSpinner();
        btnSeveralGen = new javax.swing.JButton();
        lblAmount = new javax.swing.JLabel();
        lblStart = new javax.swing.JLabel();
        lblEnd = new javax.swing.JLabel();
        chkLimit = new javax.swing.JCheckBox();
        cmbSGender = new javax.swing.JComboBox<>();
        lblSGender = new javax.swing.JLabel();
        ychStart = new com.toedter.calendar.JYearChooser();
        ychEnd = new com.toedter.calendar.JYearChooser();
        chkSFuture = new javax.swing.JCheckBox();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Isikukoodid");
        setResizable(false);

        pnlGenerate.setBorder(javax.swing.BorderFactory.createTitledBorder("Ühe genereerimine"));

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mees", "Naine" }));

        btnGenerate.setText("Genereeri");
        btnGenerate.setMaximumSize(new java.awt.Dimension(80, 23));
        btnGenerate.setMinimumSize(new java.awt.Dimension(80, 23));
        btnGenerate.setPreferredSize(new java.awt.Dimension(80, 23));
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        chkFuture.setText("Tulevik lubatud");
        chkFuture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFutureActionPerformed(evt);
            }
        });

        lblDate.setText("Kuupäev:");

        dchDate.setDate(new java.util.Date());
        dchDate.setDateFormatString("dd.MM.yyyy");
        dchDate.setMaxSelectableDate(new java.util.Date(253370761280000L));
        dchDate.setMinSelectableDate(new java.util.Date(-5364665890000L));

        lblGender.setText("Sugu:");

        javax.swing.GroupLayout pnlGenerateLayout = new javax.swing.GroupLayout(pnlGenerate);
        pnlGenerate.setLayout(pnlGenerateLayout);
        pnlGenerateLayout.setHorizontalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDate)
                            .addComponent(lblGender))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dchDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerateLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGenerateLayout.createSequentialGroup()
                        .addComponent(chkFuture)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlGenerateLayout.setVerticalGroup(
            pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerateLayout.createSequentialGroup()
                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dchDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGenerateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFuture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txaResult.setEditable(false);
        txaResult.setColumns(20);
        txaResult.setLineWrap(true);
        txaResult.setRows(5);
        jScrollPane1.setViewportView(txaResult);

        pnlCheck.setBorder(javax.swing.BorderFactory.createTitledBorder("Kontrollimine"));

        txtPersonalcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPersonalcodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPersonalcodeKeyTyped(evt);
            }
        });

        lblPersonalcode.setText("Isikukood:");

        btgCheck.add(rdoGenderString);
        rdoGenderString.setText("Soo sõna");
        rdoGenderString.setEnabled(false);
        rdoGenderString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGenderStringActionPerformed(evt);
            }
        });

        btgCheck.add(rdoYear2);
        rdoYear2.setText("Aasta (2)");
        rdoYear2.setEnabled(false);
        rdoYear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoYear2ActionPerformed(evt);
            }
        });

        btgCheck.add(rdoMonthNr);
        rdoMonthNr.setText("Kuu nr");
        rdoMonthNr.setEnabled(false);
        rdoMonthNr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMonthNrActionPerformed(evt);
            }
        });

        btgCheck.add(rdoDay);
        rdoDay.setText("Päev");
        rdoDay.setEnabled(false);
        rdoDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDayActionPerformed(evt);
            }
        });

        btgCheck.add(rdoHospitalNr);
        rdoHospitalNr.setText("Haigla nr");
        rdoHospitalNr.setEnabled(false);
        rdoHospitalNr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHospitalNrActionPerformed(evt);
            }
        });

        btgCheck.add(rdoControl);
        rdoControl.setText("Kontrollkood");
        rdoControl.setEnabled(false);
        rdoControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoControlActionPerformed(evt);
            }
        });

        btgCheck.add(rdoAge);
        rdoAge.setText("Vanus");
        rdoAge.setEnabled(false);
        rdoAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoAgeActionPerformed(evt);
            }
        });

        btgCheck.add(rdoDate);
        rdoDate.setText("Kuupäev");
        rdoDate.setEnabled(false);
        rdoDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDateActionPerformed(evt);
            }
        });

        btgCheck.add(rdoGenderLetter);
        rdoGenderLetter.setText("Soo täht");
        rdoGenderLetter.setEnabled(false);
        rdoGenderLetter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGenderLetterActionPerformed(evt);
            }
        });

        btgCheck.add(rdoYear4);
        rdoYear4.setText("Aasta (4)");
        rdoYear4.setEnabled(false);
        rdoYear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoYear4ActionPerformed(evt);
            }
        });

        btgCheck.add(rdoGenderNr);
        rdoGenderNr.setSelected(true);
        rdoGenderNr.setText("Soo nr");
        rdoGenderNr.setEnabled(false);
        rdoGenderNr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoGenderNrActionPerformed(evt);
            }
        });

        btgCheck.add(rdoMonthString);
        rdoMonthString.setText("Kuu sõna");
        rdoMonthString.setEnabled(false);
        rdoMonthString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMonthStringActionPerformed(evt);
            }
        });

        btgCheck.add(rdoHospitalString);
        rdoHospitalString.setText("Haigla nimi");
        rdoHospitalString.setEnabled(false);
        rdoHospitalString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHospitalStringActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCheckLayout = new javax.swing.GroupLayout(pnlCheck);
        pnlCheck.setLayout(pnlCheckLayout);
        pnlCheckLayout.setHorizontalGroup(
            pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblPersonalcode)
                .addGap(10, 10, 10)
                .addComponent(txtPersonalcode)
                .addContainerGap())
            .addGroup(pnlCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoGenderString)
                    .addComponent(rdoGenderNr)
                    .addComponent(rdoGenderLetter)
                    .addComponent(rdoYear2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoYear4)
                    .addComponent(rdoMonthNr, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoMonthString))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoAge, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoControl)
                    .addComponent(rdoHospitalString)
                    .addComponent(rdoHospitalNr, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoDay, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoDate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCheckLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdoAge, rdoControl, rdoDate, rdoDay, rdoGenderLetter, rdoGenderNr, rdoGenderString, rdoHospitalNr, rdoHospitalString, rdoMonthNr, rdoMonthString, rdoYear2, rdoYear4});

        pnlCheckLayout.setVerticalGroup(
            pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCheckLayout.createSequentialGroup()
                .addGroup(pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCheckLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblPersonalcode))
                    .addComponent(txtPersonalcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCheckLayout.createSequentialGroup()
                        .addGroup(pnlCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCheckLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(rdoGenderString))
                            .addComponent(rdoGenderNr)
                            .addGroup(pnlCheckLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(rdoGenderLetter)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoYear2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoYear4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoMonthNr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoMonthString))
                    .addGroup(pnlCheckLayout.createSequentialGroup()
                        .addComponent(rdoDay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoHospitalNr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoHospitalString)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoControl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoAge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoDate)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSeveralGen.setBorder(javax.swing.BorderFactory.createTitledBorder("Mitme genereerimine"));

        spnAmount.setModel(new javax.swing.SpinnerNumberModel(5, 2, 50, 1));

        btnSeveralGen.setText("Genereeri");
        btnSeveralGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeveralGenActionPerformed(evt);
            }
        });

        lblAmount.setText("Kogus:");

        lblStart.setText("Algus:");

        lblEnd.setText("Lõpp:");

        chkLimit.setSelected(true);
        chkLimit.setText("Vanusepiirang");
        chkLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLimitActionPerformed(evt);
            }
        });

        cmbSGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mehed", "Naised", "Mõlemad" }));

        lblSGender.setText("Sugu:");

        ychStart.setMaximum(2099);
        ychStart.setMinimum(1800);
        ychStart.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ychStartPropertyChange(evt);
            }
        });

        ychEnd.setEnabled(false);
        ychEnd.setMaximum(9999);
        ychEnd.setMinimum(1800);
        ychEnd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ychEndPropertyChange(evt);
            }
        });

        chkSFuture.setText("Tulevik lubatud");
        chkSFuture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSFutureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSeveralGenLayout = new javax.swing.GroupLayout(pnlSeveralGen);
        pnlSeveralGen.setLayout(pnlSeveralGenLayout);
        pnlSeveralGenLayout.setHorizontalGroup(
            pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSeveralGenLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSeveralGen)
                        .addGap(10, 10, 10))
                    .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                        .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSFuture)
                            .addComponent(chkLimit)
                            .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSeveralGenLayout.createSequentialGroup()
                                            .addComponent(lblAmount)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                        .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                                            .addComponent(lblStart)
                                            .addGap(10, 10, 10)))
                                    .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                                        .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEnd)
                                            .addComponent(lblSGender))
                                        .addGap(10, 10, 10)))
                                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbSGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ychEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ychStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pnlSeveralGenLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAmount, lblEnd, lblStart});

        pnlSeveralGenLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbSGender, spnAmount, ychEnd, ychStart});

        pnlSeveralGenLayout.setVerticalGroup(
            pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeveralGenLayout.createSequentialGroup()
                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStart)
                    .addComponent(ychStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnd)
                    .addComponent(ychEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSeveralGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSGender))
                .addGap(12, 12, 12)
                .addComponent(chkLimit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSFuture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeveralGen)
                .addContainerGap())
        );

        btnClear.setText("Puhasta");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlSeveralGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSeveralGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear))
                    .addComponent(pnlCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        Calendar birth = dchDate.getCalendar();
        SimpleDateFormat f = new SimpleDateFormat("dd.MM.yyyy");
        String date = f.format(birth.getTime());
        String gender = String.valueOf(cmbGender.getSelectedItem());
        IsikukoodidGen gen = new IsikukoodidGen(gender, date, maxYear, minYear);
        kontroll();
        if (IsikukoodidKontroll.isNumeric(gen.getPersonalcode())) {
            txtPersonalcode.setText(gen.getPersonalcode());
        } else {
            txaResult.setText(gen.getPersonalcode());
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void chkFutureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFutureActionPerformed
        if (chkFuture.isSelected()) {
            maxYear = 2099;
            cal.set(maxYear, 12, 31, 23, 59, 59);
            java.util.Date utilDate = cal.getTime();
            dchDate.setMaxSelectableDate(utilDate);
            future = true;
        } else {
            cal.setTime(new java.util.Date());
            maxYear = cal.get(Calendar.YEAR);
            dchDate.setMaxSelectableDate(new java.util.Date());
            future = false;
        }
    }//GEN-LAST:event_chkFutureActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txaResult.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void ychStartPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ychStartPropertyChange
        if (chkLimit.isSelected()) {
            ychEnd.setYear(ychStart.getYear() + 122);
        }
        if (ychStart.getYear() > ychEnd.getYear()) {
            ychEnd.setYear(ychStart.getYear());
        }
    }//GEN-LAST:event_ychStartPropertyChange

    private void chkSFutureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSFutureActionPerformed
        if (chkSFuture.isSelected()) {
            sFuture = true;
            ychStart.setMaximum(2099);
            ychEnd.setMaximum(2099);
        } else {
            sFuture = false;
            if (chkLimit.isSelected()) {
                ychStart.setMaximum(currentYear - 122);
            } else {
                ychStart.setMaximum(currentYear);
            }
            ychEnd.setMaximum(currentYear);
            if (ychEnd.getYear() > currentYear) {
                ychEnd.setYear(currentYear);
            }
        }
    }//GEN-LAST:event_chkSFutureActionPerformed

    private void chkLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLimitActionPerformed
        if (chkLimit.isSelected()) {
            ychEnd.setEnabled(false);
            ychStart.setMaximum(currentYear - 122);
            ychEnd.setMaximum(currentYear);
            ychEnd.setYear(ychStart.getYear() + 122);
            if (ychEnd.getYear() > currentYear) {
                ychEnd.setYear(currentYear);
                ychStart.setYear(currentYear - 122);
            }
        } else {
            ychEnd.setEnabled(true);
        }
    }//GEN-LAST:event_chkLimitActionPerformed

    private void ychEndPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ychEndPropertyChange
        if (ychStart.getYear() > ychEnd.getYear()) {
            ychStart.setYear(ychEnd.getYear());
        }
    }//GEN-LAST:event_ychEndPropertyChange

    private void rdoGenderNrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGenderNrActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoGenderNrActionPerformed

    private void rdoGenderLetterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGenderLetterActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoGenderLetterActionPerformed

    private void rdoGenderStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoGenderStringActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoGenderStringActionPerformed

    private void rdoYear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoYear2ActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoYear2ActionPerformed

    private void rdoYear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoYear4ActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoYear4ActionPerformed

    private void rdoMonthNrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMonthNrActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoMonthNrActionPerformed

    private void rdoMonthStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMonthStringActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoMonthStringActionPerformed

    private void rdoDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDayActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoDayActionPerformed

    private void rdoHospitalNrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHospitalNrActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoHospitalNrActionPerformed

    private void rdoHospitalStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHospitalStringActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoHospitalStringActionPerformed

    private void rdoControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoControlActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoControlActionPerformed

    private void rdoAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoAgeActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoAgeActionPerformed

    private void rdoDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDateActionPerformed
        kontroll();
    }//GEN-LAST:event_rdoDateActionPerformed

    private void txtPersonalcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPersonalcodeKeyReleased
        kontroll();
    }//GEN-LAST:event_txtPersonalcodeKeyReleased

    private void txtPersonalcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPersonalcodeKeyTyped
        kontroll();
        char character = evt.getKeyChar();
        if (((character < '0') || (character > '9')) && (character != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPersonalcodeKeyTyped

    private void btnSeveralGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeveralGenActionPerformed
        txaResult.setText("");
        ychStart.setYear(ychStart.getYear());
        ychEnd.setYear(ychEnd.getYear());
        int value = (Integer) spnAmount.getValue();
        for (int i = 0; i < value; i++) {
            randDate();
        }
    }//GEN-LAST:event_btnSeveralGenActionPerformed

    private void kontroll() {
        if (txtPersonalcode.getText().equals("")) {
            txaResult.setText("");
        }
        String personalCode = txtPersonalcode.getText();
        if (!personalCode.equals("")) {
            IsikukoodidKontroll idc = new IsikukoodidKontroll(personalCode, future);
            if (idc.getPcValid()) {
                rdoEnable(true);
                txaResult.setText("Isikukood on korrektne! \n");
                if (rdoGenderNr.isSelected()) {
                    txaResult.append("Soo number: " + idc.getGenderInt());
                }
                if (rdoGenderLetter.isSelected()) {
                    txaResult.append("Soo täht: " + idc.getGenderLetter());
                }
                if (rdoGenderString.isSelected()) {
                    txaResult.append("Soo sõna: " + idc.getGenderWord());
                }
                if (rdoYear2.isSelected()) {
                    txaResult.append("Aasta kahekohaline: " + idc.getBirthYearShortNr());
                }
                if (rdoYear4.isSelected()) {
                    txaResult.append("Aasta neljakohaline: " + idc.getBirthYearFull2());
                }
                if (rdoMonthNr.isSelected()) {
                    txaResult.append("Kuu nr: " + idc.getBirthMonthInt());
                }
                if (rdoMonthString.isSelected()) {
                    txaResult.append("Kuu sõna: " + idc.getBirthMonthWord());
                }
                if (rdoDay.isSelected()) {
                    txaResult.append("Päev nr: " + idc.getBirthDayInt());
                }
                if (rdoHospitalNr.isSelected()) {
                    txaResult.append("Haigla nr: " + idc.getHospitalInt());
                }
                if (rdoHospitalString.isSelected()) {
                    txaResult.append("Haigla nimi: " + idc.getHospitalName());
                }
                if (rdoControl.isSelected()) {
                    txaResult.append("Kontrollkood: " + idc.getControlInt());
                }
                if (rdoAge.isSelected()) {
                    txaResult.append("Vanus: " + idc.getAge());
                }
                if (rdoDate.isSelected()) {
                    txaResult.append("Sünnikuupäev: " + idc.getBirthDate());
                }
            } else {
                txaResult.setText("Isikukood on vigane!");
                rdoEnable(false);
            }
        }
    }

    public void rdoEnable(boolean bln) {
        rdoAge.setEnabled(bln);
        rdoControl.setEnabled(bln);
        rdoDate.setEnabled(bln);
        rdoDay.setEnabled(bln);
        rdoGenderLetter.setEnabled(bln);
        rdoGenderNr.setEnabled(bln);
        rdoGenderString.setEnabled(bln);
        rdoHospitalNr.setEnabled(bln);
        rdoHospitalString.setEnabled(bln);
        rdoMonthNr.setEnabled(bln);
        rdoMonthString.setEnabled(bln);
        rdoYear2.setEnabled(bln);
        rdoYear4.setEnabled(bln);
    }

    public void randDate() {
        String selectedGender = String.valueOf(cmbSGender.getSelectedItem());
        String gender;
        Calendar randCal = Calendar.getInstance();
        int year = IsikukoodidGen.randInt(ychStart.getYear(), ychEnd.getYear());
        randCal.set(randCal.YEAR, year);
        int dayOfYear = IsikukoodidGen.randInt(1, randCal.getActualMaximum(randCal.DAY_OF_YEAR));
        randCal.set(randCal.DAY_OF_YEAR, dayOfYear);
        SimpleDateFormat f = new SimpleDateFormat("dd.MM.yyyy");
        String date = f.format(randCal.getTime());
        switch (selectedGender) {
            case "Mehed":
                gender = "M";
                break;
            case "Naised":
                gender = "N";
                break;
            default:
                int rand = IsikukoodidGen.randInt(0, 1);
                if (rand == 0) {
                    gender = "M";
                } else {
                    gender = "N";
                }
                break;
        }
        IsikukoodidGen sGen = new IsikukoodidGen(gender, date, ychEnd.getYear(), ychStart.getYear());
        IsikukoodidKontroll sChck = new IsikukoodidKontroll(sGen.getPersonalcode(), sFuture);
        txaResult.append(sChck.getGenderLetter() + " " + date + " " + sGen.getPersonalcode() + "\n");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IsikukoodidMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IsikukoodidMain().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgCheck;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnSeveralGen;
    private javax.swing.JCheckBox chkFuture;
    private javax.swing.JCheckBox chkLimit;
    private javax.swing.JCheckBox chkSFuture;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbSGender;
    private com.toedter.calendar.JDateChooser dchDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblPersonalcode;
    private javax.swing.JLabel lblSGender;
    private javax.swing.JLabel lblStart;
    private javax.swing.JPanel pnlCheck;
    private javax.swing.JPanel pnlGenerate;
    private javax.swing.JPanel pnlSeveralGen;
    private javax.swing.JRadioButton rdoAge;
    private javax.swing.JRadioButton rdoControl;
    private javax.swing.JRadioButton rdoDate;
    private javax.swing.JRadioButton rdoDay;
    private javax.swing.JRadioButton rdoGenderLetter;
    private javax.swing.JRadioButton rdoGenderNr;
    private javax.swing.JRadioButton rdoGenderString;
    private javax.swing.JRadioButton rdoHospitalNr;
    private javax.swing.JRadioButton rdoHospitalString;
    private javax.swing.JRadioButton rdoMonthNr;
    private javax.swing.JRadioButton rdoMonthString;
    private javax.swing.JRadioButton rdoYear2;
    private javax.swing.JRadioButton rdoYear4;
    private javax.swing.JSpinner spnAmount;
    private javax.swing.JTextArea txaResult;
    private javax.swing.JTextField txtPersonalcode;
    private com.toedter.calendar.JYearChooser ychEnd;
    private com.toedter.calendar.JYearChooser ychStart;
    // End of variables declaration//GEN-END:variables
}
